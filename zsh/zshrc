#! /bin/zsh

#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${HOME}/.zprezto/init.zsh" ]]; then
  source "${HOME}/.zprezto/init.zsh"
fi

# Java classpath
export CLASSPATH=".:/usr/local/lib/antlr-4.13.1-complete.jar:${CLASSPATH}"

# PATH
export PATH="${HOME}/.local/bin:${PATH}"
export PATH="${HOME}/.local/brew/bin:${PATH}"
export PATH="${HOME}/.cargo/bin:${PATH}"
export PATH="${PATH}:/Applications/Emacs.app/Contents/MacOS/bin"
export PATH="${HOME}/.local/go/bin:${PATH}"
export PATH="${HOME}/go/bin:${PATH}"
export PATH="${PATH}:${HOME}/.bun/bin"

# Guile
export GUILE_LOAD_PATH="${HOME}/.local/brew/share/guile/site/3.0"
export GUILE_LOAD_COMPILED_PATH="${HOME}/.local/brew/lib/guile/3.0/site-ccache"
export GUILE_SYSTEM_EXTENSIONS_PATH="${HOME}/.local/brew/lib/guile/3.0/extensions"

# Homebrew
export HOMEBREW_NO_AUTO_UPDATE=
export PATH="/home/linuxbrew/.linuxbrew/bin:${PATH}"

# Emacs
export LSP_USE_PLISTS=true
    
# Aliases
PLATFORM="$(uname -s)"
case ${PLATFORM} in
    Linux*)
        if command -v batcat >> /dev/null; then
            alias bat="batcat"
        fi
        ;;
    Darwin*)
        alias emacs="/Applications/Emacs.app/Contents/MacOS/Emacs"
        eval "$(/opt/homebrew/bin/brew shellenv)"
        if [[ -f /opt/homebrew/bin/gmake ]]; then
            alias make="/opt/homebrew/bin/gmake"
        fi
        ;;
    *)          echo "UNKNOWN:${unameOut}"; exit 1;;
esac
alias woman="man"
alias dwr="dotnet watch run"
alias dwt="dotnet watch test"
alias sbcl="rlwrap -c sbcl"
if command -v nvim >> /dev/null; then
	alias vim=$(which nvim)
	export GIT_EDITOR=$(which nvim)
fi

# Autocompletion
[[ $commands[kubectl] ]] && source <(kubectl completion zsh)

# NVM
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# Starship
eval "$(starship init zsh)"

eval "$(ssh-agent -s)" >> /dev/null

alias ursinia-deploy='cd ./git.sr.ht/jamesaorson/ursinia && git pull && ./deploy.bash'

# NVM

# place this after nvm initialization!
autoload -U add-zsh-hook

load-nvmrc() {
  local nvmrc_path
  nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version
    nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$(nvm version)" ]; then
      nvm use
    fi
  elif [ -n "$(PWD=$OLDPWD nvm_find_nvmrc)" ] && [ "$(nvm version)" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}

if command -v nvm_find_nvmrc >> /dev/null; then
  add-zsh-hook chpwd load-nvmrc
  load-nvmrc
fi

zoomer() {
    alias vibe_check="git status"
    alias whip="git add $@"
    alias rizz="git commit -m $@"
    alias yeet="git push $@"
    alias no_cap="-f"
    alias yap="--verbose"
    alias no_yap="-q"
}

export GPG_TTY=$(tty)
